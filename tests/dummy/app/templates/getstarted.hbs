<h1>Getting Started</h1>
<h2>Installation</h2>

<i>Ember Forms</i> is an Ember CLI module and can be simply installed by:

<pre><code class="bash">npm install --save-dev ember-rapid-forms</code></pre>

<h2>Quick example</h2>

<h3>Given the following controller:</h3>
<div class="well line-example">
    <pre><code class="coffeescript">
MyController = Em.Controller.extend({
    genderOptions: Ember.A([
        {id: 'M', name: 'Male'}
        {id: 'F', name: 'Female'}
        {id: 'O', name: 'Other'}
    ]),
    actions:{
        submit: function(){
            alert ("Submitted!");
        }
    }
})
    </code></pre>
</div>


<h3>And the following model:</h3>
<div class="well line-example">
    <pre><code class="coffeescript">
import Ember from 'ember';
import DS from 'ember-data';
import EV from 'ember-validations';
import InputErrors from 'ember-rapid-forms/mixins/input-errors';

var User = DS.Model.extend(EV, InputErrors, {
    firstName: DS.attr('string', { defaultValue: null }),
    lastName: DS.attr('string', { defaultValue: null }),
    password: DS.attr('string'),
    comment: DS.attr('string'),
    active: DS.attr('boolean'),
    gender: DS.attr('string'),
    nameHasValue: Ember.computed('name', {
        get:function(){
            return !!this.get('name').length;
        }
    }),
    fullName: Ember.computed('firstName', 'lastName', {
        get: function() {
            if (this.get('firstName')) {
                return `${this.get('firstName')} ${this.get('lastName')}`;
            }
            else {
                return null;
            }
        },
        set: function(key, value) {
            let [firstName, lastName] = value.split(/\s+/);
            firstName = firstName ? firstName : null;
            lastName = lastName ? lastName : null;
            this.setProperties({ firstName, lastName });
            return value;
        }
    })
})


User.reopen({
    validations: {
        fullName: {
            format: {
                with: /^[^\s]+(\s[^\s]+)+$/,
                message: "enter a first and last name"
            }
        },
        password: {
            presence: true,
            length: {
                minimum: 6
            }
        },
        comment: {
            presence: true
        },
        gender: {
            presence: true
        }
    }
});
    </code></pre>
</div>

<i>Note: for validation support you need: https://github.com/dockyard/ember-validations project</i>

<h3>With this template:</h3>
<div class="well line-example">
    <pre><code class="handlebars">
\{{#em-form model=model formLayout=layout}}
    \{{em-input property="fullName" label="Full Name" placeholder="Enter a full name..." canShowErrors=model.visibleErrors.fullName}}
    \{{em-input property="password" label="Password" placeholder="And password..." type="password" disabled=nameHasValue canShowErrors=model.visibleErrors.password}}
    \{{em-text property="comment" label="Comment" placeholder="Comment please.." rows=4 canShowErrors=model.visibleErrors.comment}}
    \{{em-select property="gender" label="Gender" prompt="-select-" content=genderOptions optionValuePath="id" optionLabelPath="name" canShowErrors=model.visibleErrors.gender}}
    \{{em-checkbox property="active" label="Active?" canShowErrors=model.visibleErrors.active}}
    &lt;div class="form-group"&gt;
        &lt;button class="btn btn-default" \{{ action "validate" }}&gt;Run Validations&lt;/button&gt;
        &lt;button class="btn btn-default" \{{ action "clearValidations" }}&gt;Clear Validations&lt;/button&gt;
    &lt;/div&gt;
\{{/em-form}}
    </code></pre>
</div>

<h3>The result would be:</h3>

<a href="http://jsbin.com/pexolude/201" target="_blank" class="btn btn-warning jsbin pull-right">jsBin</a>
<div class="well line-example">
    {{form_sample model=model}}
</div>
