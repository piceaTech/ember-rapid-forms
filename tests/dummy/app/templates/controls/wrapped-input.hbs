<h3>Input</h3>

You can enrich the input control by creating your own component that wraps the input control,
This gives you the freedom to support extra visual effects when neccessary.

<h2>Template Markup</h2>
<div class="well line-example">
    <pre><code class="handlebars">
\{{#em-form model=model formLayout=layout as |form|}}
    \{{form.input label="Name" property="name"}}
    \{{my-custom-input label="Name" property="name"}}
    \{{#form.custom-input label="Password" property="password" name="property" as |customInput|}}
        \{{input value=model.password type="password" name=customInput.name}}
    \{{/form.custom-input}}
\{{/em-form}}
    </code></pre>
</div>

<h2>The custom component code</h2>
<div class="well line-example">
    <pre><code class="coffeescript">
WrappedInputComponent = Em.Component.extend({
    attributeBindings: ['style'],
    style: Ember.computed({
        get:function(){
            return "border: dotted 2px;"
        }
    })
})
    </code></pre>
</div>

<h2>The custom component template</h2>
<div class="well line-example">
    <pre><code class="handlebars">
\{{em-input error=showError placeholder="Wrapped with ugly border"}}
\{{#if showError}}
    Extra error data !
\{{/if}}
    </code></pre>
</div>

<h2>Result</h2>
<div class="well line-example">
{{#em-form model=model formLayout=layout as |form|}}
    {{form.input label="Name" property="name"}}
    {{my-custom-input label="Name" property="name" form=form}}
    {{#form.custom-input label="Password" property="password" name="property" as |customInput|}}
        {{input value=model.password type="password" name=customInput.name}}
    {{/form.custom-input}}
{{/em-form}}
</div>
